
# -------- Corridor lights -------------------------------------------------------------------------
- alias: Turn on corridor light when there is movement
  trigger:
    platform: state
    entity_id: binary_sensor.corridor_motion_occupancy
    to: 'on'
  action:
    service: script.turn_on_lights
    data:
      entity_id: light.corridor_lights

- alias: Turn off corridor light after movement
  trigger:
    platform: state
    entity_id: binary_sensor.corridor_motion_occupancy
    to: 'off'
  condition: "{{ state_attr('binary_sensor.server_room_door', 'contact') }}"
  action:
    service: light.turn_off
    entity_id: light.corridor_lights

# --------------------------------------------------------------------------------------------------

# -------- Corridor lights -------------------------------------------------------------------------
- alias: Turn on kitchen lights when there is movement
  id: kitchen_light_sensor
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/kitchen_motion_sensor
  action:
    choose:
    - conditions:
      - condition: template
        value_template: "{{ trigger.payload_json.occupancy == true }}"
      sequence:
        service: switch.turn_on
        entity_id: 
          - switch.kitchen_lights
          - switch.kitchen_underlighting
    - conditions:
      - condition: template
        value_template: "{{ trigger.payload_json.occupancy == false}}"
      sequence:
        service: switch.turn_off
        entity_id: 
          - switch.kitchen_lights
          - switch.kitchen_underlighting

# --------------------------------------------------------------------------------------------------

- alias: Set motion helper to false at sunrise
  trigger:
    platform: sun
    event: sunrise
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.helper_morning_covers_opened

- alias: Open covers in the morning
  trigger:
    platform: state
    entity_id: binary_sensor.corridor_motion_occupancy
    to: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.helper_morning_covers_opened
      state: 'off'
  action:
    - service: cover.open_cover
      entity_id:
        - cover.kitchen_blind
        - cover.bedroom_curtain
        - cover.living_room_curtain
        - cover.office_blind
    - service: input_boolean.turn_on
      entity_id: input_boolean.helper_morning_covers_opened
  
- alias: Stop living room curtain if the door is open
  trigger:
    platform: state
    entity_id: cover.living_room_curtain
  condition:
    - condition: state
      entity_id: binary_sensor.living_room_window_sensor_contact
      state: 'on'
  action:
    service: cover.stop_cover
    entity_id: cover.living_room_curtain

# Bedroom light controller automations
- alias: Bedroom Light Switch
  id: bedroom_light_switch
  mode: parallel
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/bedroom_light_switch/action
  action:
    choose:
      - conditions:
        - condition: and
          conditions:
            - condition: state
              entity_id: light.bedroom_lights
              state: "off"
            - condition: template
              value_template: '{{ "toggle" == trigger.payload }}'
        sequence:
          service: script.turn_on_lights
          data:
            entity_id: light.bedroom_lights
      - conditions:
        - condition: and
          conditions:
            - condition: state
              entity_id: light.bedroom_lights
              state: "on"
            - condition: template
              value_template: '{{ "toggle" == trigger.payload }}'
        sequence:
          service: light.turn_off
          entity_id: light.bedroom_lights

- alias: Living Room Light Switch
  id: living_room_light_switch
  mode: parallel
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/living_room_light_switch/action
  action:
    choose:
      - conditions:
        - condition: and
          conditions:
            - condition: state
              entity_id: light.living_room_lights
              state: "off"
            - condition: template
              value_template: '{{trigger.payload == "toggle"}}'
        sequence:
          service: script.turn_on_lights
          data:
            entity_id: light.living_room_lights
      - conditions:
        - condition: and
          conditions:
            - condition: state
              entity_id: light.living_room_lights
              state: "on"
            - condition: template
              value_template: '{{trigger.payload == "toggle"}}'
        sequence:
          service: light.turn_off
          entity_id: light.living_room_lights

- alias: Living Room volume controller
  id: living_room_volume_controller
  mode: queued
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/living_room_volume/action
  action:
    choose:
      - conditions:
        - condition: template
          value_template: "{{ trigger.payload == 'rotate_left' }}"
        sequence:
          service: media_player.volume_down
          data:
            entity_id: media_player.amplifier
      - conditions:
        - condition: template
          value_template: "{{ trigger.payload == 'rotate_right' }}"
        sequence:
          service: media_player.volume_up
          data:
            entity_id: media_player.amplifier
      - conditions:
        - condition: template
          value_template: "{{ trigger.payload == 'play_pause' }}"
        sequence:
          service: media_player.media_play_pause
          data:
            entity_id: media_player.living_room_tv
      - conditions:
        - condition: template
          value_template: "{{ trigger.payload == 'skip_forward' }}"
        sequence:
          service: media_player.media_play_pause
          data:
            entity_id: media_player.living_room_tv


- alias: Office Light Switch
  id: office_light_switch
  mode: parallel
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/office_light_switch/action
  action:
    choose:
      - conditions:
        - condition: and
          conditions:
            - condition: template
              value_template: "{{ trigger.payload == 'single_left' }}"
            - condition: state
              entity_id: light.office_light
              state: "off"
        sequence:
          service: script.turn_on_lights
          data:
            entity_id: light.office_light
      - conditions:
        - condition: and
          conditions:
          - condition: template
            value_template: "{{ trigger.payload == 'single_left' }}"
          - condition: state
            entity_id: light.office_light
            state: "on"
        sequence:
          service: light.turn_off
          entity_id: light.office_light
      - conditions:
        - condition: template
          value_template: "{{ trigger.payload == 'single_right' }}"
        sequence:
          service: switch.toggle
          data:
            entity_id: switch.mats_pc
