
# -------- Corridor lights -------------------------------------------------------------------------
- alias: Turn on corridor light when there is movement
  trigger:
    platform: state
    entity_id: binary_sensor.corridor_motion_occupancy
    to: 'on'
  action:
    service: light.turn_on
    data_template:
      entity_id: light.corridor_lights
      transition: 0.25
      kelvin: "{{ state_attr('sensor.circadian_values', 'colortemp') | int }}"
      brightness_pct: "{{ state_attr('switch.circadian_lighting_circadian_lighting', 'brightness') | int }}"

- alias: Turn off corridor light after movement
  trigger:
    platform: state
    entity_id: binary_sensor.corridor_motion_occupancy
    to: 'off'
  action:
    service: light.turn_off
    entity_id: light.corridor_lights

# --------------------------------------------------------------------------------------------------

- alias: Set motion helper to false at sunrise
  trigger:
    platform: sun
    event: sunrise
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.helper_morning_covers_opened

- alias: Open covers in the morning
  trigger:
    platform: state
    entity_id: binary_sensor.corridor_motion_occupancy
    to: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.helper_morning_covers_opened
      state: 'off'
  action:
    - service: cover.open_cover
      entity_id:
        - cover.kitchen_blind
        - cover.bedroom_curtain
        - cover.living_room_curtain
        - cover.office_blind
    - service: input_boolean.turn_on
      entity_id: input_boolean.helper_morning_covers_opened
  
- alias: Stop living room curtain if the door is open
  trigger:
    platform: state
    entity_id: cover.living_room_curtain
  condition:
    - condition: state
      entity_id: binary_sensor.living_room_window_sensor_contact
      state: 'on'
  action:
    service: cover.stop_cover
    entity_id: cover.living_room_curtain

- alias: 'Set theme at startup'
  trigger:
    - platform: homeassistant
      event: start
  action:
    service: frontend.set_theme
    data:
      name: clear

# Bedroom light controller automations
- alias: Bedroom Light / toggle power
  trigger:
    - platform: device
      domain: mqtt
      device_id: bb32c3e755ed4ce090019314a5aec51c
      type: action
      subtype: toggle
      discovery_id: 0x000d6ffffe1cf39c action_toggle
  action:
    service: light.toggle
    data_template:
      entity_id: light.bedroom_lights
      transition: 0.25
      kelvin: "{{ state_attr('sensor.circadian_values', 'colortemp') | int }}"
      brightness_pct: "{{ state_attr('switch.circadian_lighting_circadian_lighting', 'brightness') | int }}"

# ------------ Circadian brightness automation -------------

# ## Bedroom light
# - alias: Bedroom light Circadian adjustment
#   trigger:
#     platform: numeric_state
#     entity_id: sun.sun
#     value_template: "{{ state_attr('sun.sun', 'elevation') }}"
#   condition:
    
# Every ten minutes:
#   for each light:
#     if light.brightness == circadian.brightness && light.kelvin == circadian.kelvin
#       set light brightness and kelvin to new circadian value
# When a light turns on:
#   Set light brightness and kelvin to circadian value