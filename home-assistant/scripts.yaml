turn_on_lights:
  alias: Turn on lights with Adaptive Lighting
  icon: mdi:lamp
  mode: parallel
  fields:
    entity_id:
      description: entity_id of light
      example: light.bedroom_lights
  sequence:
    service: adaptive_lighting.apply
    data:
      entity_id: switch.adaptive_lighting_lights
      lights: "{{ entity_id }}"
      turn_on_lights: true
toggle_snapcast_player_from_source:
  alias: Toggle snapcast player on / off source
  fields:
    entity_id:
      description: entity_id of the player
      example: media_player.bedroom_speaker
    source:
      description: The source the player should be set to
  sequence:
    choose:
      - conditions: >
         {{ state_attr(entity_id, 'source') == source and
            not(state_attr(entity_id, 'is_volume_muted')) }}
        sequence:
          - service: media_player.volume_mute
            data:
              entity_id: "{{ entity_id }}"
              is_volume_muted: true
      - conditions: >
          {{ state_attr(entity_id, 'source') == source and
             state_attr(entity_id, 'is_volume_muted') }}
        sequence:
          - service: media_player.volume_mute
            data:
              entity_id: "{{ entity_id }}"
              is_volume_muted: false
    default:
      - service: media_player.select_source
        data:
          entity_id: "{{ entity_id }}"
          source: "{{ source }}"
      - service: media_player.volume_mute
        data:
          entity_id: "{{ entity_id }}"
          is_volume_muted: false